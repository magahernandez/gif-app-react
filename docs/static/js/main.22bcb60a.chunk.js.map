{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","rsp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAQ,OAAMP,GAAN,mBAAqBO,OAC5CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,8BCPnBG,EAAO,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUR,GAF9C,+DAGDS,MAAOF,GAHN,cAGbG,EAHa,gBAIIA,EAAIC,OAJR,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCLHO,EAAU,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdR,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA4BxC,OArBAC,qBAAU,WAENvB,EAAQL,GAAU6B,MAAM,SAAAC,GAGhBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACzB,IASG0B,EDb2BK,CAAa/B,GAAjCkB,EAduB,EAc7BN,KAAca,EAde,EAcfA,QAItB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDrB,KAEnDyB,GAAW,mBAAGJ,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,wBAAC,EAAD,2BACSA,GADT,IAEIiB,IAAKjB,EAAIC,eE7BxBiB,EAAe,WAAM,MAKMzC,mBAAS,CAAC,gBALhB,mBAKvB0C,EALuB,KAKX3C,EALW,KAe9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ2C,EAAWpB,KAAK,SAAAd,GAAQ,OAEpB,aADA,CACC,EAAD,CACIA,SAAWA,GACJA,Y,MC5BnCmC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.22bcb60a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if( inputValue.trim().length > 2 ){\n            setCategories( category => [ inputValue, ...category ]);\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\nexport const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=KLO3DwvdFVM5ADQMXC871zWPv3TvjE2B`;\n    const rsp = await fetch( url );\n    const { data } = await rsp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        };\n    })\n    \n    return gifs;\n\n};\n","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n\n    //console.log({id, title, url});\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFecthGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    /*const [images, setImages] = useState([])\n\n\n    // If the category changes, useEffect is called again.\n\n    useEffect(() => {\n        getGifs(category)\n            .then( imgs => {\n                setImages(imgs);\n            })\n    }, [ category ]);*/\n\n    const { data: images, loading } = useFetchGifs(category);\n\n    \n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\"> { category }</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\n            <div className=\"card-grid\">\n                \n                {\n                    images.map( img => (\n                        <GifGridItem \n                            { ...img }\n                            key={img.id}\n                        />\n                    ))\n                }\n\n            </div>\n        </>\n    )\n}\n","import { useState , useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs(category).then( imgs => {\n\n            //setTimeout(() => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });  \n            //}, 3000);\n        })\n\n    }, [category]);\n\n    /*setTimeout( () => {\n        setState({\n            data: [1,2,3,4,5,6,7],\n            loading: false\n        })\n    },3000)*/\n\n    return state // { data: [], loading: true };\n\n}","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n\n    //const [categories, setCategories] = useState(['One Punch', 'Samurai X', 'Dragon Ball']);\n    const [categories, setCategories] = useState(['Programming']);\n\n    /*const handleAdd = () => {\n        // 'HunterXHunter'\n        // setCategories( [...categories, 'HunterXHunter'] );\n        setCategories( category => [...category, 'HunterXHunter'])\n\n    };\n    console.log(categories) // Here is updated*/\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr />\n\n            {/*<button onClick={ handleAdd }>Agregar</button>*/}\n\n            <ol>\n                {\n                    categories.map( category => (\n                        // return <li key={ category }> { category } </li>\n                        <GifGrid \n                            category={ category }\n                            key= { category }\n                        />\n                    ))\n                }\n            </ol>\n\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// GifExpertApp\n// <h2>GifExpertApp</h2>\n// <hr />"],"sourceRoot":""}